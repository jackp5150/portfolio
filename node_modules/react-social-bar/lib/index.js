'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _SocialBar = require('./SocialBar');

var _SocialBar2 = _interopRequireDefault(_SocialBar);

require('./Social.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Social = function (_Component) {
  _inherits(Social, _Component);

  function Social() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Social);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Social.__proto__ || Object.getPrototypeOf(Social)).call.apply(_ref, [this].concat(args))), _this), _this.state = { shouldRender: true }, _this.updateWindowDimensions = function () {
      if (_this.props.config.hideBelowWidth > window.innerWidth) {
        return _this.setState({ shouldRender: false });
      }
      _this.setState({ shouldRender: true });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Social, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.config.hideBelowWidth) {
        this.updateWindowDimensions();
        window.addEventListener('resize', this.updateWindowDimensions);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.props.config.hideBelowWidth) {
        window.removeEventListener('resize', this.updateWindowDimensions);
      }
    }

    // PRIVATE

  }, {
    key: 'render',
    value: function render() {
      var config = this.props.config;


      if (!this.state.shouldRender) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'div',
        { className: 'Social' },
        _react2.default.createElement(_SocialBar2.default, {
          description: config.description,
          domain: config.domain,
          handleClick: config.handleClick,
          hideBelowWidth: config.hideBelowWidth,
          mediaUrl: config.mediaUrl,
          productName: config.productName,
          twitterHandle: config.twitterHandle
        })
      );
    }
  }]);

  return Social;
}(_react.Component);

Social.propTypes = {
  config: _propTypes2.default.shape({
    description: _propTypes2.default.string.isRequired,
    domain: _propTypes2.default.string.isRequired,
    handleClick: _propTypes2.default.func,
    hideBelowWidth: _propTypes2.default.number,
    mediaUrl: _propTypes2.default.string,
    productName: _propTypes2.default.string.isRequired,
    twitterHandle: _propTypes2.default.string
  })
};
Social.defaultProps = {
  config: {
    handleClick: function handleClick(name) {
      console.log('clicked ', name);
    },
    hideBelowWidth: null
  }
};
exports.default = Social;